<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vogon&#39;s Ship</title>
    <link>https://d-dorazio.github.io/</link>
    <description>Recent content on Vogon&#39;s Ship</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 May 2018 17:39:13 +0200</lastBuildDate>
    
	<atom:link href="https://d-dorazio.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Library</title>
      <link>https://d-dorazio.github.io/library/</link>
      <pubDate>Mon, 21 May 2018 17:39:13 +0200</pubDate>
      
      <guid>https://d-dorazio.github.io/library/</guid>
      <description>Just a collection of random thoughts about books and papers that I read or that I&amp;rsquo;m reading.
Learn you a Haskell for great good! This was the first book that I read when learning Haskell. It&amp;rsquo;s easy to read and it presents all the basic Haskell features in a simple yet effective way. On the other hand, to make it beginner friendly it barely scratches the surface about what Haskell can do and it&amp;rsquo;s not enough to write production ready Haskell.</description>
    </item>
    
    <item>
      <title>My Take on Documenting Code and Readability</title>
      <link>https://d-dorazio.github.io/post/my-take-on-documenting-code/</link>
      <pubDate>Mon, 30 Apr 2018 12:08:32 +0200</pubDate>
      
      <guid>https://d-dorazio.github.io/post/my-take-on-documenting-code/</guid>
      <description>Recently we had a workshop at my workplace about how to document code. Unfortunately I wasn&amp;rsquo;t able to attend it, but the topic was in the air in the following days and I chatted about it a few times with my colleagues. I thought this was a solved problem because a lot of ink has already been spilled on it, but after a lot of discussions it became clear to me that it is not the case.</description>
    </item>
    
    <item>
      <title>Functional Turing Machine</title>
      <link>https://d-dorazio.github.io/post/functional-turing-machine/</link>
      <pubDate>Tue, 23 Jan 2018 21:30:52 +0100</pubDate>
      
      <guid>https://d-dorazio.github.io/post/functional-turing-machine/</guid>
      <description>A week ago or so I managed to complete the Advent of Code 2017 and it was a really fun experience. Most of the problems was really interesting(the spiral memory is probably my favourite), but the problem for day 25 especially attracted me. Basically it was about implementing a Turing Machine.
This is not rocket science since a Turing Machine is a simple idea(like all the brilliant ideas) and a lot of ink has been spilled on it.</description>
    </item>
    
    <item>
      <title>2018 Resolutions</title>
      <link>https://d-dorazio.github.io/post/2018-resolutions/</link>
      <pubDate>Sun, 07 Jan 2018 23:22:02 +0100</pubDate>
      
      <guid>https://d-dorazio.github.io/post/2018-resolutions/</guid>
      <description>I&amp;rsquo;ve just finished watching Interstellar for probably the 7th time since it came out and I really enjoy it every time. The soundtrack is amazing and it adds a completely new dimension to the movie. The plot is literally mind blowing, but I know that a lot of people don&amp;rsquo;t get it. I don&amp;rsquo;t care, I understand the amount of pieces I need to find it interesting and that&amp;rsquo;s enough for me.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://d-dorazio.github.io/about/</link>
      <pubDate>Thu, 04 Jan 2018 22:20:23 +0100</pubDate>
      
      <guid>https://d-dorazio.github.io/about/</guid>
      <description>I am a developer working at develer where I can build a lot of cool stuff working with great people. My main interests are functional programming and programming language design. In my spare time I like solving twisty puzzles like the megaminx, but my favourite one is the plain old Rubik&amp;rsquo;s cube of course. I am not fast by any means though ðŸ˜… but I enjoy the experience a lot.</description>
    </item>
    
    <item>
      <title>Signals from the past</title>
      <link>https://d-dorazio.github.io/post/signals-from-the-past/</link>
      <pubDate>Sun, 26 Mar 2017 01:30:06 +0100</pubDate>
      
      <guid>https://d-dorazio.github.io/post/signals-from-the-past/</guid>
      <description>It&amp;rsquo;s just common knowledge that pressing Ctrl-C will usually terminate a long running command in a shell. How cool is that? But, how does it work?
Every developer that has done some little system programming on Linux knows that the answer is signals. They are defined in the POSIX standard and are a (very) limited form of inter-process communication. The idea is really simple: a signal is sent to a program to notify it that an event has occured.</description>
    </item>
    
  </channel>
</rss>